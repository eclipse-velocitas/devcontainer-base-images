# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Build base-image
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 5 * * 0'
  workflow_dispatch:
  push:
    # Run only on branches/commits and not tags
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-image:
    strategy:
      matrix:
        language: [python, cpp]

    name: "Building image"
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Linters
        uses: ./.github/actions/pre-commit-action

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.0

      - name: Get image tag
        id: get-tag
        shell: bash
        run: |
          TAG=${{ github.sha }}
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG=latest
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push
        id: image_build
        uses: devcontainers/ci@84fc3a0920e0f9ef1d02c89d909a1c7e3379f5b8
        with:
          imageName: ghcr.io/${{ github.repository }}/${{ matrix.language }}
          imageTag: ${{ steps.get-tag.outputs.tag }}
          push: always
          platform: linux/amd64,linux/arm64
          noCache: true
          subFolder: ./Dockerfiles/${{ matrix.language }}/

  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-22.04
    needs: [build-image]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: |
          syft -o spdx-json=SBOM/python.spdx.json -o cyclonedx-json=SBOM/python.cyclonedx.json ghcr.io/${{ github.repository }}/python:${{ needs.build-image.outputs.tag }}
          syft -o spdx-json=SBOM/cpp.spdx.json -o cyclonedx-json=SBOM/cpp.cyclonedx.json ghcr.io/${{ github.repository }}/cpp:${{ needs.build-image.outputs.tag }}

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v3
        with:
          name: SBOM
          path: |
            SBOM/*.json

      - name: Check if SBOM changed
        id: check-sbom
        run: |
          if [[ -n $(git diff -w -I'^.*SPDXID' -I'^.*ghcr.io/${{ github.repository }}' \
          -I'^.*created' -I'^.*spdxElementId' -I'^.*relatedSpdxElement' -I'^.*comment' -I'^.*version": "sha256' \
          -I'^.*serialNumber' -I'^.*timestamp' -I'^.*"value": "sha256:' -I'^.*bom-ref') ]]; then
            echo "SBOM changed"
            echo "SBOM_CHANGED=true" >> $GITHUB_OUTPUT
          else
            echo "SBOM up to date"
            echo "SBOM_CHANGED=false" >> $GITHUB_OUTPUT
          fi

      - uses: EndBug/add-and-commit@v9
        id: push-changes
        if: steps.check-sbom.outputs.SBOM_CHANGED == 'true'
        with:
          message: 'Updated SBOM'

      - name: Fail if SBOM changed and not commited
        if: steps.check-sbom.outputs.SBOM_CHANGED == 'true' && steps.push-changes.outputs.pushed != 'true'
        run: |
            echo '::error:: SBOM changed, please download the artifacts and commit the new content'
            exit 1
